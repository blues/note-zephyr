{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Zephyr: Build",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "command": [
                "west build --board ${input:board} --pristine=always ${input:app_dir}"
            ],
            "detail": "Builds the project"
        },
        {
            "label": "Zephyr: Rebuild",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "command": [
                "west build --board ${input:board} --pristine=auto"
            ],
            "detail": "Rebuilds the project",
            "runOptions": { "reevaluateOnRerun": false}
        },
        {
            "label": "Zephyr: Flash Firmware",
            "type": "shell",
            "problemMatcher": [],
            "command": [
                "west flash"
            ],
            "detail": "Flashes firmware to a board"
        },
        {
            "label": "Zephyr: Flash Firmware (External)",
            "type": "shell",
            "problemMatcher": [],
            "command": [
                "{ echo \"reset halt; program build/zephyr/zephyr.elf verify reset; sleep 0; exit;\" >&3; cat <&3-; } 3<> /dev/tcp/host.docker.internal/4444"
            ],
            "detail": "Flashes firmware to a board via the external programmer"
        },
        {
            "label": "Zephyr: List Boards",
            "type": "shell",
            "problemMatcher": [],
            "command": [
                "west boards"
            ],
            "detail": "Lists all available boards"
        },
        {
            "label": "Zephyr: Menuconfig",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/build",
                "env": {
                    "BOARD": "${config:board}",
                    "LC_ALL": "C"
                }
            },
            "problemMatcher": [],
            "command": [
                "ninja menuconfig"
            ],
            "detail": "Opens the Zephyr menuconfig"
        },
        {
            "label": "Zephyr: Generate SBOM",
            "type": "shell",
            "command": "west spdx --init -d build && west build -b ${input:board} ${input:app_dir} -- -DCONFIG_BUILD_OUTPUT_META=y && west spdx -d build && echo 'SBOM generated successfully in build/spdx/' && ls -la build/spdx/",
            "group": "build",
            "problemMatcher": [],
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "detail": "Builds the project with metadata enabled and generates SPDX SBOM documents"
        },
    ],
    "inputs": [
        {
            "id": "project",
            "description": "Project:",
            "default": "blinky",
            "type": "promptString"
        },
        {
            "id": "board",
            "type": "pickString",
            "description": "Select the target board",
            "options": [
                "swan_r5",
            ],
            "default": "swan_r5"
        },
        {
            "id": "app_dir",
            "type": "promptString",
            "description": "Application directory (e.g. 'app', 'examples/blinky')",
            "default": "app"
        }
    ]
}
